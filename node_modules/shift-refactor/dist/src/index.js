"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @public
 */
var global_state_1 = require("./global-state");
Object.defineProperty(exports, "GlobalState", { enumerable: true, get: function () { return global_state_1.GlobalState; } });
/**
 * @public
 */
var refactor_session_1 = require("./refactor-session");
Object.defineProperty(exports, "RefactorSession", { enumerable: true, get: function () { return refactor_session_1.RefactorSession; } });
/**
 * @public
 */
var refactor_session_chainable_1 = require("./refactor-session-chainable");
Object.defineProperty(exports, "refactor", { enumerable: true, get: function () { return refactor_session_chainable_1.refactor; } });
Object.defineProperty(exports, "RefactorSessionChainable", { enumerable: true, get: function () { return refactor_session_chainable_1.RefactorSessionChainable; } });
/**
 * @public
 */
__exportStar(require("./misc/types"), exports);
var util_1 = require("./misc/util");
Object.defineProperty(exports, "isLiteral", { enumerable: true, get: function () { return util_1.isLiteral; } });
Object.defineProperty(exports, "isStatement", { enumerable: true, get: function () { return util_1.isStatement; } });
Object.defineProperty(exports, "isDeepSimilar", { enumerable: true, get: function () { return util_1.isDeepSimilar; } });
Object.defineProperty(exports, "isMemberAssignment", { enumerable: true, get: function () { return util_1.isMemberAssignment; } });
Object.defineProperty(exports, "isNodeWithStatements", { enumerable: true, get: function () { return util_1.isNodeWithStatements; } });
Object.defineProperty(exports, "isShiftNode", { enumerable: true, get: function () { return util_1.isShiftNode; } });
Object.defineProperty(exports, "isMemberExpression", { enumerable: true, get: function () { return util_1.isMemberExpression; } });
Object.defineProperty(exports, "copy", { enumerable: true, get: function () { return util_1.copy; } });
Object.defineProperty(exports, "getRootIdentifier", { enumerable: true, get: function () { return util_1.getRootIdentifier; } });
//# sourceMappingURL=index.js.map